// <auto-generated />
using System;
using EpmDashboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EpmDashboard.Migrations
{
    [DbContext(typeof(EPMContext))]
    [Migration("20221219163016_addSchoolToEngineeringAreas")]
    partial class addSchoolToEngineeringAreas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EpmDashboard.Models.EPM.EngineeringArea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("School")
                        .HasColumnType("longtext");

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("EngineeringAreas");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.Problem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProblemMakerid")
                        .HasColumnType("int")
                        .HasColumnName("ProblemMaker_id");

                    b.Property<int>("ProblemSolverid")
                        .HasColumnType("int")
                        .HasColumnName("ProblemSolver_id");

                    b.Property<DateTime?>("createtime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("funding")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.HasKey("id");

                    b.HasIndex("ProblemMakerid");

                    b.HasIndex("ProblemSolverid");

                    b.ToTable("Problem");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.ProblemMaker", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("about")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("createtime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.HasKey("id");

                    b.ToTable("ProblemMaker");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.ProblemSolver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EngineeringAreasid")
                        .HasColumnType("int")
                        .HasColumnName("EngineeringAreas_id");

                    b.Property<DateTime?>("createtime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("create_time");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("profession")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("updatetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("update_time");

                    b.HasKey("id");

                    b.HasIndex("EngineeringAreasid");

                    b.ToTable("ProblemSolver");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.Problem", b =>
                {
                    b.HasOne("EpmDashboard.Models.EPM.ProblemMaker", "ProblemMaker")
                        .WithMany("Problems")
                        .HasForeignKey("ProblemMakerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EpmDashboard.Models.EPM.ProblemSolver", "ProblemSolver")
                        .WithMany("Problems")
                        .HasForeignKey("ProblemSolverid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProblemMaker");

                    b.Navigation("ProblemSolver");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.ProblemSolver", b =>
                {
                    b.HasOne("EpmDashboard.Models.EPM.EngineeringArea", "EngineeringArea")
                        .WithMany("ProblemSolvers")
                        .HasForeignKey("EngineeringAreasid");

                    b.Navigation("EngineeringArea");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.EngineeringArea", b =>
                {
                    b.Navigation("ProblemSolvers");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.ProblemMaker", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("EpmDashboard.Models.EPM.ProblemSolver", b =>
                {
                    b.Navigation("Problems");
                });
#pragma warning restore 612, 618
        }
    }
}
